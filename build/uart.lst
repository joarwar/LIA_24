ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/uart.c"
  18              		.global	stLink_Uart
  19              		.section	.bss.stLink_Uart,"aw",%nobits
  20              		.align	2
  23              	stLink_Uart:
  24 0000 00000000 		.space	72
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.text.errHandler,"ax",%progbits
  26              		.align	1
  27              		.global	errHandler
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	errHandler:
  33              	.LFB68:
   1:Core/Src/uart.c **** #include "stm32f103xb.h"
   2:Core/Src/uart.c **** #include "string.h"
   3:Core/Src/uart.c **** #include "stdio.h"
   4:Core/Src/uart.c **** #include "float.h"
   5:Core/Src/uart.c **** #include "stdint.h"
   6:Core/Src/uart.c **** #include "stm32f1xx_hal.h"
   7:Core/Src/uart.c **** #include "uart.h"
   8:Core/Src/uart.c **** 
   9:Core/Src/uart.c **** 
  10:Core/Src/uart.c **** UART_HandleTypeDef stLink_Uart;
  11:Core/Src/uart.c **** void errHandler(void)
  12:Core/Src/uart.c **** {
  34              		.loc 1 12 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38              		@ link register save eliminated.
  39 0000 80B4     		push	{r7}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 7, -4
  43 0002 00AF     		add	r7, sp, #0
  44              	.LCFI1:
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 2


  45              		.cfi_def_cfa_register 7
  46              	.LBB4:
  47              	.LBB5:
  48              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 3


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 4


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  49              		.loc 2 142 3
  50              		.syntax unified
  51              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  52 0004 72B6     		cpsid i
  53              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  54              		.loc 2 143 1
  55              		.thumb
  56              		.syntax unified
  57 0006 00BF     		nop
  58              	.L2:
  59              	.LBE5:
  60              	.LBE4:
  13:Core/Src/uart.c ****   __disable_irq();
  14:Core/Src/uart.c ****   while (1)
  61              		.loc 1 14 9 discriminator 1
  62 0008 00BF     		nop
  63 000a FDE7     		b	.L2
  64              		.cfi_endproc
  65              	.LFE68:
  67              		.section	.text.uart_Init,"ax",%progbits
  68              		.align	1
  69              		.global	uart_Init
  70              		.syntax unified
  71              		.thumb
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 5


  72              		.thumb_func
  74              	uart_Init:
  75              	.LFB69:
  15:Core/Src/uart.c ****   {
  16:Core/Src/uart.c ****   }
  17:Core/Src/uart.c **** }
  18:Core/Src/uart.c **** void uart_Init(void)
  19:Core/Src/uart.c **** {
  76              		.loc 1 19 1
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0002 00AF     		add	r7, sp, #0
  86              	.LCFI3:
  87              		.cfi_def_cfa_register 7
  20:Core/Src/uart.c ****   stLink_Uart.Instance = USART2;
  88              		.loc 1 20 24
  89 0004 114B     		ldr	r3, .L6
  90 0006 124A     		ldr	r2, .L6+4
  91 0008 1A60     		str	r2, [r3]
  21:Core/Src/uart.c ****   stLink_Uart.Init.BaudRate = 115200;
  92              		.loc 1 21 29
  93 000a 104B     		ldr	r3, .L6
  94 000c 4FF4E132 		mov	r2, #115200
  95 0010 5A60     		str	r2, [r3, #4]
  22:Core/Src/uart.c ****   stLink_Uart.Init.WordLength = UART_WORDLENGTH_8B;
  96              		.loc 1 22 31
  97 0012 0E4B     		ldr	r3, .L6
  98 0014 0022     		movs	r2, #0
  99 0016 9A60     		str	r2, [r3, #8]
  23:Core/Src/uart.c ****   stLink_Uart.Init.StopBits = UART_STOPBITS_1;
 100              		.loc 1 23 29
 101 0018 0C4B     		ldr	r3, .L6
 102 001a 0022     		movs	r2, #0
 103 001c DA60     		str	r2, [r3, #12]
  24:Core/Src/uart.c ****   stLink_Uart.Init.Parity = UART_PARITY_NONE;
 104              		.loc 1 24 27
 105 001e 0B4B     		ldr	r3, .L6
 106 0020 0022     		movs	r2, #0
 107 0022 1A61     		str	r2, [r3, #16]
  25:Core/Src/uart.c ****   stLink_Uart.Init.Mode = UART_MODE_TX_RX;
 108              		.loc 1 25 25
 109 0024 094B     		ldr	r3, .L6
 110 0026 0C22     		movs	r2, #12
 111 0028 5A61     		str	r2, [r3, #20]
  26:Core/Src/uart.c ****   stLink_Uart.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 112              		.loc 1 26 30
 113 002a 084B     		ldr	r3, .L6
 114 002c 0022     		movs	r2, #0
 115 002e 9A61     		str	r2, [r3, #24]
  27:Core/Src/uart.c ****   stLink_Uart.Init.OverSampling = UART_OVERSAMPLING_16;
 116              		.loc 1 27 33
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 6


 117 0030 064B     		ldr	r3, .L6
 118 0032 0022     		movs	r2, #0
 119 0034 DA61     		str	r2, [r3, #28]
  28:Core/Src/uart.c ****   if (HAL_UART_Init(&stLink_Uart) != HAL_OK)
 120              		.loc 1 28 7
 121 0036 0548     		ldr	r0, .L6
 122 0038 FFF7FEFF 		bl	HAL_UART_Init
 123 003c 0346     		mov	r3, r0
 124              		.loc 1 28 6
 125 003e 002B     		cmp	r3, #0
 126 0040 01D0     		beq	.L5
  29:Core/Src/uart.c ****   {
  30:Core/Src/uart.c ****     errHandler();
 127              		.loc 1 30 5
 128 0042 FFF7FEFF 		bl	errHandler
 129              	.L5:
  31:Core/Src/uart.c ****   }
  32:Core/Src/uart.c **** }
 130              		.loc 1 32 1
 131 0046 00BF     		nop
 132 0048 80BD     		pop	{r7, pc}
 133              	.L7:
 134 004a 00BF     		.align	2
 135              	.L6:
 136 004c 00000000 		.word	stLink_Uart
 137 0050 00440040 		.word	1073759232
 138              		.cfi_endproc
 139              	.LFE69:
 141              		.section	.text.uart_PrintString,"ax",%progbits
 142              		.align	1
 143              		.global	uart_PrintString
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	uart_PrintString:
 149              	.LFB70:
  33:Core/Src/uart.c **** 
  34:Core/Src/uart.c **** void uart_PrintString(char * str)
  35:Core/Src/uart.c **** {
 150              		.loc 1 35 1
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 8
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154 0000 80B5     		push	{r7, lr}
 155              	.LCFI4:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 82B0     		sub	sp, sp, #8
 160              	.LCFI5:
 161              		.cfi_def_cfa_offset 16
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI6:
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
  36:Core/Src/uart.c ****   HAL_UART_Transmit(&stLink_Uart, (unsigned char *)str, strlen(str), HAL_MAX_DELAY);
 166              		.loc 1 36 57
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 7


 167 0008 7868     		ldr	r0, [r7, #4]
 168 000a FFF7FEFF 		bl	strlen
 169 000e 0346     		mov	r3, r0
 170              		.loc 1 36 3
 171 0010 9AB2     		uxth	r2, r3
 172 0012 4FF0FF33 		mov	r3, #-1
 173 0016 7968     		ldr	r1, [r7, #4]
 174 0018 0348     		ldr	r0, .L9
 175 001a FFF7FEFF 		bl	HAL_UART_Transmit
  37:Core/Src/uart.c **** 
  38:Core/Src/uart.c **** }
 176              		.loc 1 38 1
 177 001e 00BF     		nop
 178 0020 0837     		adds	r7, r7, #8
 179              	.LCFI7:
 180              		.cfi_def_cfa_offset 8
 181 0022 BD46     		mov	sp, r7
 182              	.LCFI8:
 183              		.cfi_def_cfa_register 13
 184              		@ sp needed
 185 0024 80BD     		pop	{r7, pc}
 186              	.L10:
 187 0026 00BF     		.align	2
 188              	.L9:
 189 0028 00000000 		.word	stLink_Uart
 190              		.cfi_endproc
 191              	.LFE70:
 193              		.global	__aeabi_f2iz
 194              		.global	__aeabi_i2f
 195              		.global	__aeabi_fsub
 196              		.global	__aeabi_fmul
 197              		.section	.rodata
 198              		.align	2
 199              	.LC0:
 200 0000 256400   		.ascii	"%d\000"
 201 0003 00       		.align	2
 202              	.LC1:
 203 0004 25642E25 		.ascii	"%d.%02d\000"
 203      30326400 
 204              		.section	.text.uart_PrintFloat,"ax",%progbits
 205              		.align	1
 206              		.global	uart_PrintFloat
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	uart_PrintFloat:
 212              	.LFB71:
  39:Core/Src/uart.c **** 
  40:Core/Src/uart.c **** 
  41:Core/Src/uart.c **** void uart_PrintFloat(float value)
  42:Core/Src/uart.c **** {
 213              		.loc 1 42 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 40
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 80B5     		push	{r7, lr}
 218              	.LCFI9:
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 8


 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 8CB0     		sub	sp, sp, #48
 223              	.LCFI10:
 224              		.cfi_def_cfa_offset 56
 225 0004 02AF     		add	r7, sp, #8
 226              	.LCFI11:
 227              		.cfi_def_cfa 7, 48
 228 0006 7860     		str	r0, [r7, #4]	@ float
  43:Core/Src/uart.c ****     char buf[24]; 
  44:Core/Src/uart.c **** 
  45:Core/Src/uart.c ****     int integerPart = (int)value;
 229              		.loc 1 45 9
 230 0008 7868     		ldr	r0, [r7, #4]	@ float
 231 000a FFF7FEFF 		bl	__aeabi_f2iz
 232 000e 0346     		mov	r3, r0
 233 0010 3B62     		str	r3, [r7, #32]
  46:Core/Src/uart.c ****     int fractionalPart = (int)((value - integerPart) * 100);  
 234              		.loc 1 46 39
 235 0012 386A     		ldr	r0, [r7, #32]
 236 0014 FFF7FEFF 		bl	__aeabi_i2f
 237 0018 0346     		mov	r3, r0
 238 001a 1946     		mov	r1, r3
 239 001c 7868     		ldr	r0, [r7, #4]	@ float
 240 001e FFF7FEFF 		bl	__aeabi_fsub
 241 0022 0346     		mov	r3, r0
 242              		.loc 1 46 54
 243 0024 1A49     		ldr	r1, .L15
 244 0026 1846     		mov	r0, r3
 245 0028 FFF7FEFF 		bl	__aeabi_fmul
 246 002c 0346     		mov	r3, r0
 247              		.loc 1 46 9
 248 002e 1846     		mov	r0, r3
 249 0030 FFF7FEFF 		bl	__aeabi_f2iz
 250 0034 0346     		mov	r3, r0
 251 0036 7B62     		str	r3, [r7, #36]
  47:Core/Src/uart.c ****     
  48:Core/Src/uart.c ****     if (fractionalPart < 0)
 252              		.loc 1 48 8
 253 0038 7B6A     		ldr	r3, [r7, #36]
 254 003a 002B     		cmp	r3, #0
 255 003c 02DA     		bge	.L12
  49:Core/Src/uart.c ****     {
  50:Core/Src/uart.c ****         fractionalPart = -fractionalPart;
 256              		.loc 1 50 24
 257 003e 7B6A     		ldr	r3, [r7, #36]
 258 0040 5B42     		rsbs	r3, r3, #0
 259 0042 7B62     		str	r3, [r7, #36]
 260              	.L12:
  51:Core/Src/uart.c ****     }
  52:Core/Src/uart.c **** 
  53:Core/Src/uart.c ****     if (fractionalPart == 0)
 261              		.loc 1 53 8
 262 0044 7B6A     		ldr	r3, [r7, #36]
 263 0046 002B     		cmp	r3, #0
 264 0048 07D1     		bne	.L13
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 9


  54:Core/Src/uart.c ****     {
  55:Core/Src/uart.c ****         snprintf(buf, sizeof(buf), "%d", integerPart); 
 265              		.loc 1 55 9
 266 004a 07F10800 		add	r0, r7, #8
 267 004e 3B6A     		ldr	r3, [r7, #32]
 268 0050 104A     		ldr	r2, .L15+4
 269 0052 1821     		movs	r1, #24
 270 0054 FFF7FEFF 		bl	snprintf
 271 0058 08E0     		b	.L14
 272              	.L13:
  56:Core/Src/uart.c ****     }
  57:Core/Src/uart.c ****     else
  58:Core/Src/uart.c ****     {
  59:Core/Src/uart.c ****         snprintf(buf, sizeof(buf), "%d.%02d", integerPart, fractionalPart); 
 273              		.loc 1 59 9
 274 005a 07F10800 		add	r0, r7, #8
 275 005e 7B6A     		ldr	r3, [r7, #36]
 276 0060 0093     		str	r3, [sp]
 277 0062 3B6A     		ldr	r3, [r7, #32]
 278 0064 0C4A     		ldr	r2, .L15+8
 279 0066 1821     		movs	r1, #24
 280 0068 FFF7FEFF 		bl	snprintf
 281              	.L14:
  60:Core/Src/uart.c ****     }
  61:Core/Src/uart.c **** 
  62:Core/Src/uart.c ****     HAL_UART_Transmit(&stLink_Uart, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 282              		.loc 1 62 52
 283 006c 07F10803 		add	r3, r7, #8
 284 0070 1846     		mov	r0, r3
 285 0072 FFF7FEFF 		bl	strlen
 286 0076 0346     		mov	r3, r0
 287              		.loc 1 62 5
 288 0078 9AB2     		uxth	r2, r3
 289 007a 07F10801 		add	r1, r7, #8
 290 007e 4FF0FF33 		mov	r3, #-1
 291 0082 0648     		ldr	r0, .L15+12
 292 0084 FFF7FEFF 		bl	HAL_UART_Transmit
  63:Core/Src/uart.c **** }
 293              		.loc 1 63 1
 294 0088 00BF     		nop
 295 008a 2837     		adds	r7, r7, #40
 296              	.LCFI12:
 297              		.cfi_def_cfa_offset 8
 298 008c BD46     		mov	sp, r7
 299              	.LCFI13:
 300              		.cfi_def_cfa_register 13
 301              		@ sp needed
 302 008e 80BD     		pop	{r7, pc}
 303              	.L16:
 304              		.align	2
 305              	.L15:
 306 0090 0000C842 		.word	1120403456
 307 0094 00000000 		.word	.LC0
 308 0098 04000000 		.word	.LC1
 309 009c 00000000 		.word	stLink_Uart
 310              		.cfi_endproc
 311              	.LFE71:
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 10


 313              		.section	.rodata
 314              		.align	2
 315              	.LC2:
 316 000c 257500   		.ascii	"%u\000"
 317 000f 00       		.align	2
 318              	.LC3:
 319 0010 257800   		.ascii	"%x\000"
 320              		.section	.text.uart_PrintInt,"ax",%progbits
 321              		.align	1
 322              		.global	uart_PrintInt
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	uart_PrintInt:
 328              	.LFB72:
  64:Core/Src/uart.c **** 
  65:Core/Src/uart.c **** void uart_PrintInt(unsigned int value, unsigned char base)
  66:Core/Src/uart.c **** {
 329              		.loc 1 66 1
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 24
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              	.LCFI14:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 86B0     		sub	sp, sp, #24
 339              	.LCFI15:
 340              		.cfi_def_cfa_offset 32
 341 0004 00AF     		add	r7, sp, #0
 342              	.LCFI16:
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 345 0008 0B46     		mov	r3, r1
 346 000a FB70     		strb	r3, [r7, #3]
  67:Core/Src/uart.c **** 	uint8_t buf[12];
  68:Core/Src/uart.c **** 
  69:Core/Src/uart.c **** 	switch(base){
 347              		.loc 1 69 2
 348 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 349 000e 0A2B     		cmp	r3, #10
 350 0010 02D0     		beq	.L18
 351 0012 102B     		cmp	r3, #16
 352 0014 08D0     		beq	.L19
 353 0016 0FE0     		b	.L20
 354              	.L18:
  70:Core/Src/uart.c **** 	case 10: sprintf((char*)buf, "%u", value); break;
 355              		.loc 1 70 11
 356 0018 07F10C03 		add	r3, r7, #12
 357 001c 7A68     		ldr	r2, [r7, #4]
 358 001e 0F49     		ldr	r1, .L21
 359 0020 1846     		mov	r0, r3
 360 0022 FFF7FEFF 		bl	sprintf
 361              		.loc 1 70 45
 362 0026 07E0     		b	.L20
 363              	.L19:
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 11


  71:Core/Src/uart.c **** 	case 16: sprintf((char*)buf, "%x", value); break;
 364              		.loc 1 71 11
 365 0028 07F10C03 		add	r3, r7, #12
 366 002c 7A68     		ldr	r2, [r7, #4]
 367 002e 0C49     		ldr	r1, .L21+4
 368 0030 1846     		mov	r0, r3
 369 0032 FFF7FEFF 		bl	sprintf
 370              		.loc 1 71 45
 371 0036 00BF     		nop
 372              	.L20:
  72:Core/Src/uart.c **** 	}
  73:Core/Src/uart.c **** 
  74:Core/Src/uart.c **** 	HAL_UART_Transmit(&stLink_Uart, buf, strlen((char*)buf), HAL_MAX_DELAY);
 373              		.loc 1 74 39
 374 0038 07F10C03 		add	r3, r7, #12
 375 003c 1846     		mov	r0, r3
 376 003e FFF7FEFF 		bl	strlen
 377 0042 0346     		mov	r3, r0
 378              		.loc 1 74 2
 379 0044 9AB2     		uxth	r2, r3
 380 0046 07F10C01 		add	r1, r7, #12
 381 004a 4FF0FF33 		mov	r3, #-1
 382 004e 0548     		ldr	r0, .L21+8
 383 0050 FFF7FEFF 		bl	HAL_UART_Transmit
  75:Core/Src/uart.c **** }
 384              		.loc 1 75 1
 385 0054 00BF     		nop
 386 0056 1837     		adds	r7, r7, #24
 387              	.LCFI17:
 388              		.cfi_def_cfa_offset 8
 389 0058 BD46     		mov	sp, r7
 390              	.LCFI18:
 391              		.cfi_def_cfa_register 13
 392              		@ sp needed
 393 005a 80BD     		pop	{r7, pc}
 394              	.L22:
 395              		.align	2
 396              	.L21:
 397 005c 0C000000 		.word	.LC2
 398 0060 10000000 		.word	.LC3
 399 0064 00000000 		.word	stLink_Uart
 400              		.cfi_endproc
 401              	.LFE72:
 403              		.section	.text.uart_PrintChar,"ax",%progbits
 404              		.align	1
 405              		.global	uart_PrintChar
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	uart_PrintChar:
 411              	.LFB73:
  76:Core/Src/uart.c **** 
  77:Core/Src/uart.c **** void uart_PrintChar(char c)
  78:Core/Src/uart.c **** {
 412              		.loc 1 78 1
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 12


 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 0000 80B5     		push	{r7, lr}
 417              	.LCFI19:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 82B0     		sub	sp, sp, #8
 422              	.LCFI20:
 423              		.cfi_def_cfa_offset 16
 424 0004 00AF     		add	r7, sp, #0
 425              	.LCFI21:
 426              		.cfi_def_cfa_register 7
 427 0006 0346     		mov	r3, r0
 428 0008 FB71     		strb	r3, [r7, #7]
  79:Core/Src/uart.c ****     HAL_UART_Transmit(&stLink_Uart, (uint8_t *)&c, 1, HAL_MAX_DELAY);
 429              		.loc 1 79 5
 430 000a F91D     		adds	r1, r7, #7
 431 000c 4FF0FF33 		mov	r3, #-1
 432 0010 0122     		movs	r2, #1
 433 0012 0348     		ldr	r0, .L24
 434 0014 FFF7FEFF 		bl	HAL_UART_Transmit
  80:Core/Src/uart.c **** }
 435              		.loc 1 80 1
 436 0018 00BF     		nop
 437 001a 0837     		adds	r7, r7, #8
 438              	.LCFI22:
 439              		.cfi_def_cfa_offset 8
 440 001c BD46     		mov	sp, r7
 441              	.LCFI23:
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 001e 80BD     		pop	{r7, pc}
 445              	.L25:
 446              		.align	2
 447              	.L24:
 448 0020 00000000 		.word	stLink_Uart
 449              		.cfi_endproc
 450              	.LFE73:
 452              		.text
 453              	.Letext0:
 454              		.file 3 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 455              		.file 4 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 456              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 457              		.file 6 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/inc
 458              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 459              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 460              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 461              		.file 10 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/..
 462              		.file 11 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/..
ARM GAS  C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:23     .bss.stLink_Uart:00000000 stLink_Uart
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:20     .bss.stLink_Uart:00000000 $d
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:26     .text.errHandler:00000000 $t
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:32     .text.errHandler:00000000 errHandler
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:68     .text.uart_Init:00000000 $t
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:74     .text.uart_Init:00000000 uart_Init
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:136    .text.uart_Init:0000004c $d
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:142    .text.uart_PrintString:00000000 $t
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:148    .text.uart_PrintString:00000000 uart_PrintString
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:189    .text.uart_PrintString:00000028 $d
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:198    .rodata:00000000 $d
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:205    .text.uart_PrintFloat:00000000 $t
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:211    .text.uart_PrintFloat:00000000 uart_PrintFloat
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:306    .text.uart_PrintFloat:00000090 $d
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:321    .text.uart_PrintInt:00000000 $t
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:327    .text.uart_PrintInt:00000000 uart_PrintInt
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:397    .text.uart_PrintInt:0000005c $d
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:404    .text.uart_PrintChar:00000000 $t
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:410    .text.uart_PrintChar:00000000 uart_PrintChar
C:\Users\vct344\AppData\Local\Temp\cc2sLX2d.s:448    .text.uart_PrintChar:00000020 $d

UNDEFINED SYMBOLS
HAL_UART_Init
strlen
HAL_UART_Transmit
__aeabi_f2iz
__aeabi_i2f
__aeabi_fsub
__aeabi_fmul
snprintf
sprintf
