ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lis2dw12_activity.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/lis2dw12_activity.c"
  18              		.section	.bss.whoamI,"aw",%nobits
  21              	whoamI:
  22 0000 00       		.space	1
  23              		.section	.bss.rst,"aw",%nobits
  26              	rst:
  27 0000 00       		.space	1
  28              		.section	.bss.tx_buffer,"aw",%nobits
  29              		.align	2
  32              	tx_buffer:
  33 0000 00000000 		.space	1000
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  34              		.section	.rodata
  35              		.align	2
  36              	.LC0:
  37 0000 4E6F206D 		.ascii	"No movement: \000"
  37      6F76656D 
  37      656E743A 
  37      2000
  38 000e 0000     		.align	2
  39              	.LC1:
  40 0010 0D0A00   		.ascii	"\015\012\000"
  41 0013 00       		.align	2
  42              	.LC2:
  43 0014 4D6F7665 		.ascii	"Movement detected: \000"
  43      6D656E74 
  43      20646574 
  43      65637465 
  43      643A2000 
  44              		.section	.text.lis2dw12_activity,"ax",%progbits
  45              		.align	1
  46              		.global	lis2dw12_activity
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	lis2dw12_activity:
  52              	.LFB68:
   1:Core/Src/lis2dw12_activity.c **** /*
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 2


   2:Core/Src/lis2dw12_activity.c ****  ******************************************************************************
   3:Core/Src/lis2dw12_activity.c ****  * @file    activity.c
   4:Core/Src/lis2dw12_activity.c ****  * @author  Sensors Software Solution Team
   5:Core/Src/lis2dw12_activity.c ****  * @brief   This file show the simplest way to detect activity/inactivity
   6:Core/Src/lis2dw12_activity.c ****  *       from sensor.
   7:Core/Src/lis2dw12_activity.c ****  *
   8:Core/Src/lis2dw12_activity.c ****  ******************************************************************************
   9:Core/Src/lis2dw12_activity.c ****  * @attention
  10:Core/Src/lis2dw12_activity.c ****  *
  11:Core/Src/lis2dw12_activity.c ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  12:Core/Src/lis2dw12_activity.c ****  * All rights reserved.</center></h2>
  13:Core/Src/lis2dw12_activity.c ****  *
  14:Core/Src/lis2dw12_activity.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  15:Core/Src/lis2dw12_activity.c ****  * the "License"; You may not use this file except in compliance with the
  16:Core/Src/lis2dw12_activity.c ****  * License. You may obtain a copy of the License at:
  17:Core/Src/lis2dw12_activity.c ****  *                        opensource.org/licenses/BSD-3-Clause
  18:Core/Src/lis2dw12_activity.c ****  *
  19:Core/Src/lis2dw12_activity.c ****  ******************************************************************************
  20:Core/Src/lis2dw12_activity.c ****  */
  21:Core/Src/lis2dw12_activity.c **** 
  22:Core/Src/lis2dw12_activity.c **** /*
  23:Core/Src/lis2dw12_activity.c ****  * This example was developed using the following STMicroelectronics
  24:Core/Src/lis2dw12_activity.c ****  * evaluation boards:
  25:Core/Src/lis2dw12_activity.c ****  *
  26:Core/Src/lis2dw12_activity.c ****  * - STEVAL_MKI109V3 + STEVAL-MKI179V1
  27:Core/Src/lis2dw12_activity.c ****  * - NUCLEO_F401RE + X_NUCLEO_IKS01A3
  28:Core/Src/lis2dw12_activity.c ****  * - DISCOVERY_SPC584B + X_NUCLEO_IKS01A3
  29:Core/Src/lis2dw12_activity.c ****  *
  30:Core/Src/lis2dw12_activity.c ****  * and STM32CubeMX tool with STM32CubeF4 MCU Package
  31:Core/Src/lis2dw12_activity.c ****  *
  32:Core/Src/lis2dw12_activity.c ****  * Used interfaces:
  33:Core/Src/lis2dw12_activity.c ****  *
  34:Core/Src/lis2dw12_activity.c ****  * STEVAL_MKI109V3    - Host side:   USB (Virtual COM)
  35:Core/Src/lis2dw12_activity.c ****  *                    - Sensor side: SPI(Default) / I2C(supported)
  36:Core/Src/lis2dw12_activity.c ****  *
  37:Core/Src/lis2dw12_activity.c ****  * NUCLEO_STM32F401RE - Host side: UART(COM) to USB bridge
  38:Core/Src/lis2dw12_activity.c ****  *                    - I2C(Default) / SPI(supported)
  39:Core/Src/lis2dw12_activity.c ****  *
  40:Core/Src/lis2dw12_activity.c ****  * DISCOVERY_SPC584B  - Host side: UART(COM) to USB bridge
  41:Core/Src/lis2dw12_activity.c ****  *                    - Sensor side: I2C(Default) / SPI(supported)
  42:Core/Src/lis2dw12_activity.c ****  *
  43:Core/Src/lis2dw12_activity.c ****  * If you need to run this example on a different hardware platform a
  44:Core/Src/lis2dw12_activity.c ****  * modification of the functions: `platform_write`, `platform_read`,
  45:Core/Src/lis2dw12_activity.c ****  * `tx_com` and 'platform_init' is required.
  46:Core/Src/lis2dw12_activity.c ****  *
  47:Core/Src/lis2dw12_activity.c ****  */
  48:Core/Src/lis2dw12_activity.c **** 
  49:Core/Src/lis2dw12_activity.c **** /* STMicroelectronics evaluation boards definition
  50:Core/Src/lis2dw12_activity.c ****  *
  51:Core/Src/lis2dw12_activity.c ****  * Please uncomment ONLY the evaluation boards in use.
  52:Core/Src/lis2dw12_activity.c ****  * If a different hardware is used please comment all
  53:Core/Src/lis2dw12_activity.c ****  * following target board and redefine yours.
  54:Core/Src/lis2dw12_activity.c ****  */
  55:Core/Src/lis2dw12_activity.c **** 
  56:Core/Src/lis2dw12_activity.c **** //#define STEVAL_MKI109V3  /* little endian */
  57:Core/Src/lis2dw12_activity.c **** //#define NUCLEO_F401RE    /* little endian */
  58:Core/Src/lis2dw12_activity.c **** //#define SPC584B_DIS      /* big endian */
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 3


  59:Core/Src/lis2dw12_activity.c **** #define NUCLEO_F103RB
  60:Core/Src/lis2dw12_activity.c **** 
  61:Core/Src/lis2dw12_activity.c **** /* ATTENTION: By default the driver is little endian. If you need switch
  62:Core/Src/lis2dw12_activity.c ****  *            to big endian please see "Endianness definitions" in the
  63:Core/Src/lis2dw12_activity.c ****  *            header file of the driver (_reg.h).
  64:Core/Src/lis2dw12_activity.c ****  */
  65:Core/Src/lis2dw12_activity.c **** 
  66:Core/Src/lis2dw12_activity.c **** /* Includes ------------------------------------------------------------------*/
  67:Core/Src/lis2dw12_activity.c **** #include <string.h>
  68:Core/Src/lis2dw12_activity.c **** #include <stdio.h>
  69:Core/Src/lis2dw12_activity.c **** #include "lis2dw12_reg.h"
  70:Core/Src/lis2dw12_activity.c **** #include "stm32f1xx_hal.h"
  71:Core/Src/lis2dw12_activity.c **** #include "uart.h"
  72:Core/Src/lis2dw12_activity.c **** #include <stdint.h>
  73:Core/Src/lis2dw12_activity.c **** 
  74:Core/Src/lis2dw12_activity.c **** /* Private macro -------------------------------------------------------------*/
  75:Core/Src/lis2dw12_activity.c **** #define    BOOT_TIME            20 //ms
  76:Core/Src/lis2dw12_activity.c **** 
  77:Core/Src/lis2dw12_activity.c **** /* Private variables ---------------------------------------------------------*/
  78:Core/Src/lis2dw12_activity.c **** static uint8_t whoamI, rst;
  79:Core/Src/lis2dw12_activity.c **** static uint8_t tx_buffer[1000];
  80:Core/Src/lis2dw12_activity.c **** 
  81:Core/Src/lis2dw12_activity.c **** /* Extern variables ----------------------------------------------------------*/
  82:Core/Src/lis2dw12_activity.c **** extern I2C_HandleTypeDef hi2c2;
  83:Core/Src/lis2dw12_activity.c **** /* Private functions ---------------------------------------------------------*/
  84:Core/Src/lis2dw12_activity.c **** 
  85:Core/Src/lis2dw12_activity.c **** /*
  86:Core/Src/lis2dw12_activity.c ****  *   WARNING:
  87:Core/Src/lis2dw12_activity.c ****  *   Functions declare in this section are defined at the end of this file
  88:Core/Src/lis2dw12_activity.c ****  *   and are strictly related to the hardware platform used.
  89:Core/Src/lis2dw12_activity.c ****  *
  90:Core/Src/lis2dw12_activity.c ****  */
  91:Core/Src/lis2dw12_activity.c **** static int32_t platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
  92:Core/Src/lis2dw12_activity.c ****                               uint16_t len);
  93:Core/Src/lis2dw12_activity.c **** static int32_t platform_read(void *handle, uint8_t reg, uint8_t *bufp,
  94:Core/Src/lis2dw12_activity.c ****                              uint16_t len);
  95:Core/Src/lis2dw12_activity.c **** static void platform_delay(uint16_t ms);
  96:Core/Src/lis2dw12_activity.c **** 
  97:Core/Src/lis2dw12_activity.c **** 
  98:Core/Src/lis2dw12_activity.c **** /* Main Example --------------------------------------------------------------*/
  99:Core/Src/lis2dw12_activity.c **** void lis2dw12_activity(void)
 100:Core/Src/lis2dw12_activity.c **** {
  53              		.loc 1 100 1
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 32
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57 0000 80B5     		push	{r7, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 88B0     		sub	sp, sp, #32
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 40
  65 0004 00AF     		add	r7, sp, #0
  66              	.LCFI2:
  67              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 4


 101:Core/Src/lis2dw12_activity.c ****   /* Initialize mems driver interface */
 102:Core/Src/lis2dw12_activity.c ****   stmdev_ctx_t dev_ctx;
 103:Core/Src/lis2dw12_activity.c ****   lis2dw12_reg_t int_route;
 104:Core/Src/lis2dw12_activity.c ****   dev_ctx.write_reg = platform_write;
  68              		.loc 1 104 21
  69 0006 4B4B     		ldr	r3, .L8
  70 0008 3B61     		str	r3, [r7, #16]
 105:Core/Src/lis2dw12_activity.c ****   dev_ctx.read_reg = platform_read;
  71              		.loc 1 105 20
  72 000a 4B4B     		ldr	r3, .L8+4
  73 000c 7B61     		str	r3, [r7, #20]
 106:Core/Src/lis2dw12_activity.c ****   dev_ctx.mdelay = platform_delay;
  74              		.loc 1 106 18
  75 000e 4B4B     		ldr	r3, .L8+8
  76 0010 BB61     		str	r3, [r7, #24]
 107:Core/Src/lis2dw12_activity.c ****   dev_ctx.handle = &hi2c2;
  77              		.loc 1 107 18
  78 0012 4B4B     		ldr	r3, .L8+12
  79 0014 FB61     		str	r3, [r7, #28]
 108:Core/Src/lis2dw12_activity.c ****   /* Initialize platform specific hardware */
 109:Core/Src/lis2dw12_activity.c ****   /* Wait sensor boot time */
 110:Core/Src/lis2dw12_activity.c ****   platform_delay(BOOT_TIME);
  80              		.loc 1 110 3
  81 0016 1420     		movs	r0, #20
  82 0018 FFF7FEFF 		bl	platform_delay
 111:Core/Src/lis2dw12_activity.c ****   /* Check device ID */
 112:Core/Src/lis2dw12_activity.c ****   lis2dw12_device_id_get(&dev_ctx, &whoamI);
  83              		.loc 1 112 3
  84 001c 07F11003 		add	r3, r7, #16
  85 0020 4849     		ldr	r1, .L8+16
  86 0022 1846     		mov	r0, r3
  87 0024 FFF7FEFF 		bl	lis2dw12_device_id_get
 113:Core/Src/lis2dw12_activity.c **** 
 114:Core/Src/lis2dw12_activity.c ****   if (whoamI != LIS2DW12_ID)
  88              		.loc 1 114 14
  89 0028 464B     		ldr	r3, .L8+16
  90 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91              		.loc 1 114 6
  92 002c 442B     		cmp	r3, #68
  93 002e 01D0     		beq	.L2
  94              	.L3:
 115:Core/Src/lis2dw12_activity.c ****     while (1) {
  95              		.loc 1 115 11 discriminator 1
  96 0030 00BF     		nop
  97 0032 FDE7     		b	.L3
  98              	.L2:
 116:Core/Src/lis2dw12_activity.c ****       /* manage here device not found */
 117:Core/Src/lis2dw12_activity.c ****     }
 118:Core/Src/lis2dw12_activity.c **** 
 119:Core/Src/lis2dw12_activity.c ****   /* Restore default configuration */
 120:Core/Src/lis2dw12_activity.c ****   lis2dw12_reset_set(&dev_ctx, PROPERTY_ENABLE);
  99              		.loc 1 120 3
 100 0034 07F11003 		add	r3, r7, #16
 101 0038 0121     		movs	r1, #1
 102 003a 1846     		mov	r0, r3
 103 003c FFF7FEFF 		bl	lis2dw12_reset_set
 104              	.L4:
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 5


 121:Core/Src/lis2dw12_activity.c **** 
 122:Core/Src/lis2dw12_activity.c ****   do {
 123:Core/Src/lis2dw12_activity.c ****     lis2dw12_reset_get(&dev_ctx, &rst);
 105              		.loc 1 123 5 discriminator 1
 106 0040 07F11003 		add	r3, r7, #16
 107 0044 4049     		ldr	r1, .L8+20
 108 0046 1846     		mov	r0, r3
 109 0048 FFF7FEFF 		bl	lis2dw12_reset_get
 124:Core/Src/lis2dw12_activity.c ****   } while (rst);
 110              		.loc 1 124 12 discriminator 1
 111 004c 3E4B     		ldr	r3, .L8+20
 112 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0050 002B     		cmp	r3, #0
 114 0052 F5D1     		bne	.L4
 125:Core/Src/lis2dw12_activity.c **** 
 126:Core/Src/lis2dw12_activity.c ****   /* Set full scale */
 127:Core/Src/lis2dw12_activity.c ****   lis2dw12_full_scale_set(&dev_ctx, LIS2DW12_2g);
 115              		.loc 1 127 3
 116 0054 07F11003 		add	r3, r7, #16
 117 0058 0021     		movs	r1, #0
 118 005a 1846     		mov	r0, r3
 119 005c FFF7FEFF 		bl	lis2dw12_full_scale_set
 128:Core/Src/lis2dw12_activity.c ****   /* Configure filtering chain
 129:Core/Src/lis2dw12_activity.c ****    * Accelerometer - filter path / bandwidth
 130:Core/Src/lis2dw12_activity.c ****    */
 131:Core/Src/lis2dw12_activity.c ****   lis2dw12_filter_path_set(&dev_ctx, LIS2DW12_LPF_ON_OUT);
 120              		.loc 1 131 3
 121 0060 07F11003 		add	r3, r7, #16
 122 0064 0021     		movs	r1, #0
 123 0066 1846     		mov	r0, r3
 124 0068 FFF7FEFF 		bl	lis2dw12_filter_path_set
 132:Core/Src/lis2dw12_activity.c ****   lis2dw12_filter_bandwidth_set(&dev_ctx, LIS2DW12_ODR_DIV_2);
 125              		.loc 1 132 3
 126 006c 07F11003 		add	r3, r7, #16
 127 0070 0021     		movs	r1, #0
 128 0072 1846     		mov	r0, r3
 129 0074 FFF7FEFF 		bl	lis2dw12_filter_bandwidth_set
 133:Core/Src/lis2dw12_activity.c ****   /* Configure power mode */
 134:Core/Src/lis2dw12_activity.c ****   lis2dw12_power_mode_set(&dev_ctx, LIS2DW12_CONT_LOW_PWR_LOW_NOISE_12bit);
 130              		.loc 1 134 3
 131 0078 07F11003 		add	r3, r7, #16
 132 007c 1021     		movs	r1, #16
 133 007e 1846     		mov	r0, r3
 134 0080 FFF7FEFF 		bl	lis2dw12_power_mode_set
 135:Core/Src/lis2dw12_activity.c ****   /* Set wake-up duration
 136:Core/Src/lis2dw12_activity.c ****    * Wake up duration event 1LSb = 1 / ODR
 137:Core/Src/lis2dw12_activity.c ****    */
 138:Core/Src/lis2dw12_activity.c ****   lis2dw12_wkup_dur_set(&dev_ctx, 1);
 135              		.loc 1 138 3
 136 0084 07F11003 		add	r3, r7, #16
 137 0088 0121     		movs	r1, #1
 138 008a 1846     		mov	r0, r3
 139 008c FFF7FEFF 		bl	lis2dw12_wkup_dur_set
 139:Core/Src/lis2dw12_activity.c ****   /* Set sleep duration
 140:Core/Src/lis2dw12_activity.c ****    * Duration to go in sleep mode (1 LSb = 512 / ODR)
 141:Core/Src/lis2dw12_activity.c ****    */
 142:Core/Src/lis2dw12_activity.c ****   lis2dw12_act_sleep_dur_set(&dev_ctx, 1);
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 6


 140              		.loc 1 142 3
 141 0090 07F11003 		add	r3, r7, #16
 142 0094 0121     		movs	r1, #1
 143 0096 1846     		mov	r0, r3
 144 0098 FFF7FEFF 		bl	lis2dw12_act_sleep_dur_set
 143:Core/Src/lis2dw12_activity.c ****   /* Set Activity wake-up threshold
 144:Core/Src/lis2dw12_activity.c ****    * Threshold for wake-up 1 LSB = FS_XL / 64
 145:Core/Src/lis2dw12_activity.c ****    */
 146:Core/Src/lis2dw12_activity.c ****   lis2dw12_wkup_threshold_set(&dev_ctx, 8);
 145              		.loc 1 146 3
 146 009c 07F11003 		add	r3, r7, #16
 147 00a0 0821     		movs	r1, #8
 148 00a2 1846     		mov	r0, r3
 149 00a4 FFF7FEFF 		bl	lis2dw12_wkup_threshold_set
 147:Core/Src/lis2dw12_activity.c ****   /* Data sent to wake-up interrupt function */
 148:Core/Src/lis2dw12_activity.c ****   lis2dw12_wkup_feed_data_set(&dev_ctx, LIS2DW12_HP_FEED);
 150              		.loc 1 148 3
 151 00a8 07F11003 		add	r3, r7, #16
 152 00ac 0021     		movs	r1, #0
 153 00ae 1846     		mov	r0, r3
 154 00b0 FFF7FEFF 		bl	lis2dw12_wkup_feed_data_set
 149:Core/Src/lis2dw12_activity.c ****   /* Config activity / inactivity or stationary / motion detection */
 150:Core/Src/lis2dw12_activity.c ****   lis2dw12_act_mode_set(&dev_ctx, LIS2DW12_DETECT_ACT_INACT);
 155              		.loc 1 150 3
 156 00b4 07F11003 		add	r3, r7, #16
 157 00b8 0121     		movs	r1, #1
 158 00ba 1846     		mov	r0, r3
 159 00bc FFF7FEFF 		bl	lis2dw12_act_mode_set
 151:Core/Src/lis2dw12_activity.c ****   /* Enable activity detection interrupt */
 152:Core/Src/lis2dw12_activity.c ****   lis2dw12_pin_int1_route_get(&dev_ctx, &int_route.ctrl4_int1_pad_ctrl);
 160              		.loc 1 152 3
 161 00c0 07F10C02 		add	r2, r7, #12
 162 00c4 07F11003 		add	r3, r7, #16
 163 00c8 1146     		mov	r1, r2
 164 00ca 1846     		mov	r0, r3
 165 00cc FFF7FEFF 		bl	lis2dw12_pin_int1_route_get
 153:Core/Src/lis2dw12_activity.c ****   int_route.ctrl4_int1_pad_ctrl.int1_wu = PROPERTY_ENABLE;
 166              		.loc 1 153 41
 167 00d0 3B7B     		ldrb	r3, [r7, #12]
 168 00d2 43F02003 		orr	r3, r3, #32
 169 00d6 3B73     		strb	r3, [r7, #12]
 154:Core/Src/lis2dw12_activity.c ****   lis2dw12_pin_int1_route_set(&dev_ctx, &int_route.ctrl4_int1_pad_ctrl);
 170              		.loc 1 154 3
 171 00d8 07F10C02 		add	r2, r7, #12
 172 00dc 07F11003 		add	r3, r7, #16
 173 00e0 1146     		mov	r1, r2
 174 00e2 1846     		mov	r0, r3
 175 00e4 FFF7FEFF 		bl	lis2dw12_pin_int1_route_set
 155:Core/Src/lis2dw12_activity.c ****   /* Set Output Data Rate */
 156:Core/Src/lis2dw12_activity.c ****   lis2dw12_data_rate_set(&dev_ctx, LIS2DW12_XL_ODR_200Hz);
 176              		.loc 1 156 3
 177 00e8 07F11003 		add	r3, r7, #16
 178 00ec 0621     		movs	r1, #6
 179 00ee 1846     		mov	r0, r3
 180 00f0 FFF7FEFF 		bl	lis2dw12_data_rate_set
 181              	.L7:
 182              	.LBB2:
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 7


 157:Core/Src/lis2dw12_activity.c **** 
 158:Core/Src/lis2dw12_activity.c ****   /* Wait Events */
 159:Core/Src/lis2dw12_activity.c ****   while (1) {
 160:Core/Src/lis2dw12_activity.c ****     lis2dw12_all_sources_t all_source;
 161:Core/Src/lis2dw12_activity.c ****     /* Read status register */
 162:Core/Src/lis2dw12_activity.c ****     lis2dw12_all_sources_get(&dev_ctx, &all_source);
 183              		.loc 1 162 5
 184 00f4 3A1D     		adds	r2, r7, #4
 185 00f6 07F11003 		add	r3, r7, #16
 186 00fa 1146     		mov	r1, r2
 187 00fc 1846     		mov	r0, r3
 188 00fe FFF7FEFF 		bl	lis2dw12_all_sources_get
 163:Core/Src/lis2dw12_activity.c **** 
 164:Core/Src/lis2dw12_activity.c ****       /* Check if Activity/Inactivity events */
 165:Core/Src/lis2dw12_activity.c ****     if (all_source.wake_up_src.sleep_state_ia) {
 189              		.loc 1 165 9
 190 0102 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 191 0104 03F01003 		and	r3, r3, #16
 192 0108 DBB2     		uxtb	r3, r3
 193              		.loc 1 165 8
 194 010a 002B     		cmp	r3, #0
 195 010c 05D0     		beq	.L5
 166:Core/Src/lis2dw12_activity.c ****       uart_PrintString("No movement: ");
 196              		.loc 1 166 7
 197 010e 0F48     		ldr	r0, .L8+24
 198 0110 FFF7FEFF 		bl	uart_PrintString
 167:Core/Src/lis2dw12_activity.c ****       //uart_PrintInt(all_source.wake_up_src.sleep_state_ia, 10);  
 168:Core/Src/lis2dw12_activity.c ****       uart_PrintString("\r\n");
 199              		.loc 1 168 7
 200 0114 0E48     		ldr	r0, .L8+28
 201 0116 FFF7FEFF 		bl	uart_PrintString
 202              	.L5:
 169:Core/Src/lis2dw12_activity.c ****     }
 170:Core/Src/lis2dw12_activity.c **** 
 171:Core/Src/lis2dw12_activity.c ****     if (all_source.wake_up_src.wu_ia) {
 203              		.loc 1 171 9
 204 011a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 205 011c 03F00803 		and	r3, r3, #8
 206 0120 DBB2     		uxtb	r3, r3
 207              		.loc 1 171 8
 208 0122 002B     		cmp	r3, #0
 209 0124 E6D0     		beq	.L7
 172:Core/Src/lis2dw12_activity.c ****       uart_PrintString("Movement detected: ");
 210              		.loc 1 172 7
 211 0126 0B48     		ldr	r0, .L8+32
 212 0128 FFF7FEFF 		bl	uart_PrintString
 173:Core/Src/lis2dw12_activity.c ****       //uart_PrintInt(all_source.wake_up_src.wu_ia, 10);  
 174:Core/Src/lis2dw12_activity.c ****       uart_PrintString("\r\n");
 213              		.loc 1 174 7
 214 012c 0848     		ldr	r0, .L8+28
 215 012e FFF7FEFF 		bl	uart_PrintString
 216              	.LBE2:
 159:Core/Src/lis2dw12_activity.c ****     lis2dw12_all_sources_t all_source;
 217              		.loc 1 159 13
 218 0132 DFE7     		b	.L7
 219              	.L9:
 220              		.align	2
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 8


 221              	.L8:
 222 0134 00000000 		.word	platform_write
 223 0138 00000000 		.word	platform_read
 224 013c 00000000 		.word	platform_delay
 225 0140 00000000 		.word	hi2c2
 226 0144 00000000 		.word	whoamI
 227 0148 00000000 		.word	rst
 228 014c 00000000 		.word	.LC0
 229 0150 10000000 		.word	.LC1
 230 0154 14000000 		.word	.LC2
 231              		.cfi_endproc
 232              	.LFE68:
 234              		.section	.text.platform_write,"ax",%progbits
 235              		.align	1
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	platform_write:
 241              	.LFB69:
 175:Core/Src/lis2dw12_activity.c ****     }
 176:Core/Src/lis2dw12_activity.c **** 
 177:Core/Src/lis2dw12_activity.c ****   }
 178:Core/Src/lis2dw12_activity.c ****   
 179:Core/Src/lis2dw12_activity.c **** }
 180:Core/Src/lis2dw12_activity.c **** 
 181:Core/Src/lis2dw12_activity.c **** /*
 182:Core/Src/lis2dw12_activity.c ****  * @brief  Write generic device register (platform dependent)
 183:Core/Src/lis2dw12_activity.c ****  *
 184:Core/Src/lis2dw12_activity.c ****  * @param  handle    customizable argument. In this examples is used in
 185:Core/Src/lis2dw12_activity.c ****  *                   order to select the correct sensor bus handler.
 186:Core/Src/lis2dw12_activity.c ****  * @param  reg       register to write
 187:Core/Src/lis2dw12_activity.c ****  * @param  bufp      pointer to data to write in register reg
 188:Core/Src/lis2dw12_activity.c ****  * @param  len       number of consecutive register to write
 189:Core/Src/lis2dw12_activity.c ****  *
 190:Core/Src/lis2dw12_activity.c ****  */
 191:Core/Src/lis2dw12_activity.c **** static int32_t platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
 192:Core/Src/lis2dw12_activity.c ****                               uint16_t len)
 193:Core/Src/lis2dw12_activity.c **** {
 242              		.loc 1 193 1
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 16
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI3:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 88B0     		sub	sp, sp, #32
 252              	.LCFI4:
 253              		.cfi_def_cfa_offset 40
 254 0004 04AF     		add	r7, sp, #16
 255              	.LCFI5:
 256              		.cfi_def_cfa 7, 24
 257 0006 F860     		str	r0, [r7, #12]
 258 0008 7A60     		str	r2, [r7, #4]
 259 000a 1A46     		mov	r2, r3
 260 000c 0B46     		mov	r3, r1
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 9


 261 000e FB72     		strb	r3, [r7, #11]
 262 0010 1346     		mov	r3, r2	@ movhi
 263 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 194:Core/Src/lis2dw12_activity.c ****   HAL_I2C_Mem_Write(handle, LIS2DW12_I2C_ADD_L, reg,
 264              		.loc 1 194 3
 265 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 266 0016 9AB2     		uxth	r2, r3
 267 0018 4FF47A73 		mov	r3, #1000
 268 001c 0293     		str	r3, [sp, #8]
 269 001e 3B89     		ldrh	r3, [r7, #8]
 270 0020 0193     		str	r3, [sp, #4]
 271 0022 7B68     		ldr	r3, [r7, #4]
 272 0024 0093     		str	r3, [sp]
 273 0026 0123     		movs	r3, #1
 274 0028 3121     		movs	r1, #49
 275 002a F868     		ldr	r0, [r7, #12]
 276 002c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 195:Core/Src/lis2dw12_activity.c ****                     I2C_MEMADD_SIZE_8BIT, (uint8_t*) bufp, len, 1000);
 196:Core/Src/lis2dw12_activity.c **** 
 197:Core/Src/lis2dw12_activity.c ****   return 0;
 277              		.loc 1 197 10
 278 0030 0023     		movs	r3, #0
 198:Core/Src/lis2dw12_activity.c **** }
 279              		.loc 1 198 1
 280 0032 1846     		mov	r0, r3
 281 0034 1037     		adds	r7, r7, #16
 282              	.LCFI6:
 283              		.cfi_def_cfa_offset 8
 284 0036 BD46     		mov	sp, r7
 285              	.LCFI7:
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 0038 80BD     		pop	{r7, pc}
 289              		.cfi_endproc
 290              	.LFE69:
 292              		.section	.text.platform_read,"ax",%progbits
 293              		.align	1
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 298              	platform_read:
 299              	.LFB70:
 199:Core/Src/lis2dw12_activity.c **** 
 200:Core/Src/lis2dw12_activity.c **** /*
 201:Core/Src/lis2dw12_activity.c ****  * @brief  Read generic device register (platform dependent)
 202:Core/Src/lis2dw12_activity.c ****  *
 203:Core/Src/lis2dw12_activity.c ****  * @param  handle    customizable argument. In this examples is used in
 204:Core/Src/lis2dw12_activity.c ****  *                   order to select the correct sensor bus handler.
 205:Core/Src/lis2dw12_activity.c ****  * @param  reg       register to read
 206:Core/Src/lis2dw12_activity.c ****  * @param  bufp      pointer to buffer that store the data read
 207:Core/Src/lis2dw12_activity.c ****  * @param  len       number of consecutive register to read
 208:Core/Src/lis2dw12_activity.c ****  *
 209:Core/Src/lis2dw12_activity.c ****  */
 210:Core/Src/lis2dw12_activity.c **** static int32_t platform_read(void *handle, uint8_t reg, uint8_t *bufp,
 211:Core/Src/lis2dw12_activity.c ****                              uint16_t len)
 212:Core/Src/lis2dw12_activity.c **** {
 300              		.loc 1 212 1
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 10


 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 16
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI8:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 88B0     		sub	sp, sp, #32
 310              	.LCFI9:
 311              		.cfi_def_cfa_offset 40
 312 0004 04AF     		add	r7, sp, #16
 313              	.LCFI10:
 314              		.cfi_def_cfa 7, 24
 315 0006 F860     		str	r0, [r7, #12]
 316 0008 7A60     		str	r2, [r7, #4]
 317 000a 1A46     		mov	r2, r3
 318 000c 0B46     		mov	r3, r1
 319 000e FB72     		strb	r3, [r7, #11]
 320 0010 1346     		mov	r3, r2	@ movhi
 321 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 213:Core/Src/lis2dw12_activity.c ****   HAL_I2C_Mem_Read(handle, LIS2DW12_I2C_ADD_L, reg,
 322              		.loc 1 213 3
 323 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 324 0016 9AB2     		uxth	r2, r3
 325 0018 4FF47A73 		mov	r3, #1000
 326 001c 0293     		str	r3, [sp, #8]
 327 001e 3B89     		ldrh	r3, [r7, #8]
 328 0020 0193     		str	r3, [sp, #4]
 329 0022 7B68     		ldr	r3, [r7, #4]
 330 0024 0093     		str	r3, [sp]
 331 0026 0123     		movs	r3, #1
 332 0028 3121     		movs	r1, #49
 333 002a F868     		ldr	r0, [r7, #12]
 334 002c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 214:Core/Src/lis2dw12_activity.c ****                    I2C_MEMADD_SIZE_8BIT, bufp, len, 1000);
 215:Core/Src/lis2dw12_activity.c **** 
 216:Core/Src/lis2dw12_activity.c ****   return 0;
 335              		.loc 1 216 10
 336 0030 0023     		movs	r3, #0
 217:Core/Src/lis2dw12_activity.c **** }
 337              		.loc 1 217 1
 338 0032 1846     		mov	r0, r3
 339 0034 1037     		adds	r7, r7, #16
 340              	.LCFI11:
 341              		.cfi_def_cfa_offset 8
 342 0036 BD46     		mov	sp, r7
 343              	.LCFI12:
 344              		.cfi_def_cfa_register 13
 345              		@ sp needed
 346 0038 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE70:
 350              		.section	.text.platform_delay,"ax",%progbits
 351              		.align	1
 352              		.syntax unified
 353              		.thumb
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 11


 354              		.thumb_func
 356              	platform_delay:
 357              	.LFB71:
 218:Core/Src/lis2dw12_activity.c **** 
 219:Core/Src/lis2dw12_activity.c **** /*
 220:Core/Src/lis2dw12_activity.c ****  * @brief  Write generic device register (platform dependent)
 221:Core/Src/lis2dw12_activity.c ****  *
 222:Core/Src/lis2dw12_activity.c ****  * @param  tx_buffer     buffer to transmit
 223:Core/Src/lis2dw12_activity.c ****  * @param  len           number of byte to send
 224:Core/Src/lis2dw12_activity.c ****  *
 225:Core/Src/lis2dw12_activity.c ****  */
 226:Core/Src/lis2dw12_activity.c **** 
 227:Core/Src/lis2dw12_activity.c **** /*
 228:Core/Src/lis2dw12_activity.c ****  * @brief  platform specific delay (platform dependent)
 229:Core/Src/lis2dw12_activity.c ****  *
 230:Core/Src/lis2dw12_activity.c ****  * @param  ms        delay in ms
 231:Core/Src/lis2dw12_activity.c ****  *
 232:Core/Src/lis2dw12_activity.c ****  */
 233:Core/Src/lis2dw12_activity.c **** static void platform_delay(uint16_t ms)
 234:Core/Src/lis2dw12_activity.c **** {
 358              		.loc 1 234 1
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362 0000 80B5     		push	{r7, lr}
 363              	.LCFI13:
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 82B0     		sub	sp, sp, #8
 368              	.LCFI14:
 369              		.cfi_def_cfa_offset 16
 370 0004 00AF     		add	r7, sp, #0
 371              	.LCFI15:
 372              		.cfi_def_cfa_register 7
 373 0006 0346     		mov	r3, r0
 374 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 235:Core/Src/lis2dw12_activity.c ****   HAL_Delay(ms);
 375              		.loc 1 235 3
 376 000a FB88     		ldrh	r3, [r7, #6]
 377 000c 1846     		mov	r0, r3
 378 000e FFF7FEFF 		bl	HAL_Delay
 236:Core/Src/lis2dw12_activity.c **** }
 379              		.loc 1 236 1
 380 0012 00BF     		nop
 381 0014 0837     		adds	r7, r7, #8
 382              	.LCFI16:
 383              		.cfi_def_cfa_offset 8
 384 0016 BD46     		mov	sp, r7
 385              	.LCFI17:
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 0018 80BD     		pop	{r7, pc}
 389              		.cfi_endproc
 390              	.LFE71:
 392              		.text
 393              	.Letext0:
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 12


 394              		.file 2 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 395              		.file 3 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 396              		.file 4 "Core/Inc/lis2dw12_reg.h"
 397              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 398              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 399              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 400              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 401              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 402              		.file 10 "Core/Inc/uart.h"
ARM GAS  C:\Users\vct344\AppData\Local\Temp\ccDKItch.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 lis2dw12_activity.c
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:21     .bss.whoamI:00000000 whoamI
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:22     .bss.whoamI:00000000 $d
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:26     .bss.rst:00000000 rst
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:27     .bss.rst:00000000 $d
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:29     .bss.tx_buffer:00000000 $d
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:32     .bss.tx_buffer:00000000 tx_buffer
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:35     .rodata:00000000 $d
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:45     .text.lis2dw12_activity:00000000 $t
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:51     .text.lis2dw12_activity:00000000 lis2dw12_activity
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:356    .text.platform_delay:00000000 platform_delay
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:222    .text.lis2dw12_activity:00000134 $d
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:240    .text.platform_write:00000000 platform_write
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:298    .text.platform_read:00000000 platform_read
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:235    .text.platform_write:00000000 $t
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:293    .text.platform_read:00000000 $t
C:\Users\vct344\AppData\Local\Temp\ccDKItch.s:351    .text.platform_delay:00000000 $t

UNDEFINED SYMBOLS
lis2dw12_device_id_get
lis2dw12_reset_set
lis2dw12_reset_get
lis2dw12_full_scale_set
lis2dw12_filter_path_set
lis2dw12_filter_bandwidth_set
lis2dw12_power_mode_set
lis2dw12_wkup_dur_set
lis2dw12_act_sleep_dur_set
lis2dw12_wkup_threshold_set
lis2dw12_wkup_feed_data_set
lis2dw12_act_mode_set
lis2dw12_pin_int1_route_get
lis2dw12_pin_int1_route_set
lis2dw12_data_rate_set
lis2dw12_all_sources_get
uart_PrintString
hi2c2
HAL_I2C_Mem_Write
HAL_I2C_Mem_Read
HAL_Delay
